name: Flutter PR Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository code for the workflow to access.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Sets up the Flutter environment with a specific version and channel.
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Creates a dummy .env file for CI purposes, providing a base URL for the API.
      - name: Create dummy .env file
        run: echo "API_BASE_URL=http://dummy.api.for.ci" > .env

      # Installs all project dependencies listed in pubspec.yaml.
      - name: Install dependencies
        run: flutter pub get

      # Analyzes the Flutter project for any issues, failing the job if infos are found.
      - name: Analyze project
        run: flutter analyze --fatal-infos # Fails the job if any issues are found
  
  version-check:
    name: Check version bump
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to compare with main

      - name: Ensure version bumped
        run: |
          # Extract current PR version
          pr_version=$(grep '^version:' pubspec.yaml | awk '{print $2}')

          # Extract version from main branch
          main_version=$(git show origin/main:pubspec.yaml | grep '^version:' | awk '{print $2}')

          echo "PR version:   $pr_version"
          echo "Main version: $main_version"

          if [ "$pr_version" = "$main_version" ]; then
            echo "❌ Version not bumped! Please update pubspec.yaml before merging."
            exit 1
          else
            echo "✅ Version bumped."
          fi

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checks out the repository code for the workflow to access.
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     # Sets up the Flutter environment with a specific version and channel.
  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.32.0'
  #         channel: 'stable'

  #     # Creates a dummy .env file for CI purposes, providing a base URL for the API.
  #     - name: Create dummy .env file
  #       run: echo "API_BASE_URL=http://dummy.api.for.ci" > .env

  #     # Installs all project dependencies listed in pubspec.yaml.
  #     - name: Install dependencies
  #       run: flutter pub get

  #     # Runs all tests defined in the Flutter project.
  #     - name: Run tests
  #       run: flutter test
