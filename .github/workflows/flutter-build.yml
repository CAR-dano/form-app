name: Flutter CI/CD Workflow

on:
  pull_request:
    types: [closed]
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  ci_checks:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Create dummy .env file for analysis and testing
        run: |
          echo "API_BASE_URL=http://dummy.api.for.ci" > .env
          # Add other expected env keys with dummy values if needed

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project
        run: flutter analyze

      - name: Run tests
        run: flutter test

  build_and_release:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    needs: ci_checks
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read pubspec.yaml semantic version
        id: pubspec
        run: |
          VERSION_LINE=$(grep '^version:' pubspec.yaml)
          SEMANTIC_VERSION=$(echo "$VERSION_LINE" | sed 's/version: //g' | sed 's/+\.*//g' | tr -d '[:space:]')
          echo "semantic_version=$SEMANTIC_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Create dummy .env file for analysis and testing
        run: |
          echo "API_BASE_URL=http://dummy.api.for.ci" > .env
          # Add other expected env keys with dummy values if needed

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Create .env file for Release Build
        run: |
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" > .env
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }} # Ensure this secret is set in GitHub repo settings

      - name: Build APK
        run: flutter build apk --release --build-name=${{ steps.pubspec.outputs.semantic_version }} --build-number=${{ github.run_number }}

      - name: Create Release Tag Name
        id: create_tag
        run: echo "tag_name=v${{ steps.pubspec.outputs.semantic_version }}+${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          release_name: "Release v${{ steps.pubspec.outputs.semantic_version }}+${{ github.run_number }}"
          body: |
            Automated release triggered by merge of PR #${{ github.event.pull_request.number }}:
            **Version:** v${{ steps.pubspec.outputs.semantic_version }}+${{ github.run_number }}
            **Title:** ${{ github.event.pull_request.title }}
            **Author:** ${{ github.event.pull_request.user.login }}
            **Link:** ${{ github.event.pull_request.html_url }}

            ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      - name: Upload Release APK Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release-v${{ steps.pubspec.outputs.semantic_version }}+${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Build Artifact (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-v${{ steps.pubspec.outputs.semantic_version }}+${{ github.run_number }}
          path: build/app/outputs/flutter-apk/app-release.apk
